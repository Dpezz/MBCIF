<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>