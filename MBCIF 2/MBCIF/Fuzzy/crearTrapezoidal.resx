<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>